events {
    worker_connections 1024;
}

http {
    upstream api {
        server server:3000;
    }

    # HTTP server - handle Let's Encrypt challenges and redirect to HTTPS
    server {
        listen 80;
        server_name api.flagwars.dev;
        
        # Let's Encrypt challenge location
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name api.flagwars.dev;

        # SSL configuration - Let's Encrypt certificates
        ssl_certificate /etc/letsencrypt/live/api.flagwars.dev/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.flagwars.dev/privkey.pem;
        
        # SSL security settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Proxy to API server
        location / {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS is handled by Express server, no need for nginx CORS headers
        }

        # Health check endpoint
        location /health {
            proxy_pass http://api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
